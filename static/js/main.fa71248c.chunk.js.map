{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSicialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","v4","uploadString","response","getDownloadURL","nweetPost","createAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","useCallback","q","query","where","orderBy","getDocs","forEach","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa71248c.chunk.js","sourcesContent":["// import * as firebase from \"firebase/app\";\n// import \"firebase/auth\";\n\nimport * as firebase from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// firebase.initializeApp(firebaseConfig);\n// export const authService = firebase.auth();\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"@firebase/auth\";\nimport { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        // login\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={[newAccount ? \"Create Account\" : \"Login\"]}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in.\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService } from \"fbase\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n// export default () => <span>Auth</span>;\n\n// 위의 방식으로 작성해도 되지만\n// Auth 컴포넌트를 사용하는 부모 컴포넌트에서 자동으로 import 되게 하려면\nconst Auth = () => {\n  const onSicialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(authService, provider);\n  };\n\n  return (\n    <>\n      <div className=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n        <AuthForm />\n        <div className=\"authBtns\">\n          <button onClick={onSicialClick} name=\"google\" className=\"authBtn\">\n            Continue with Google\n            <FontAwesomeIcon icon={faGoogle} />\n          </button>\n          <button onClick={onSicialClick} name=\"github\" className=\"authBtn\">\n            Continue with Github\n            <FontAwesomeIcon icon={faGithub} />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"attachment\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { addDoc, collection } from \"@firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport v4 from \"uuid/dist/v4\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    const nweetPost = {\n      text: nweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(dbService, \"nweets\"), nweetPost);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = ({ currentTarget: { result } }) => {\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt={attachment}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { collection, onSnapshot } from \"@firebase/firestore\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { updateProfile } from \"@firebase/auth\";\nimport {\n  collection,\n  getDocs,\n  orderBy,\n  query,\n  where,\n} from \"@firebase/firestore\";\nimport { authService, dbService } from \"fbase\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj?.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = useCallback(async () => {\n    // V8\n    // const nweets = await dbService\n    //   .collection(\"nweets\")\n    //   .where(\"creatorId\", \"==\", userObj.uid)\n    //   .get();\n\n    // V9\n    const q = query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createAt\")\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.id, \"=> \", doc.data());\n    });\n  }, [userObj.uid]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      // update v8\n      // userObj.updateProfile()\n\n      // v9\n      await updateProfile(userObj, {\n        displayName: newDisplayName,\n      });\n\n      refreshUser();\n    }\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, [getMyNweets]);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj?.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj}></Home>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth></Auth>\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}